#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyCafe.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyCafe")]
	public partial class DataContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBanCafe(BanCafe instance);
    partial void UpdateBanCafe(BanCafe instance);
    partial void DeleteBanCafe(BanCafe instance);
    partial void InsertCaLamViec(CaLamViec instance);
    partial void UpdateCaLamViec(CaLamViec instance);
    partial void DeleteCaLamViec(CaLamViec instance);
    partial void InsertChiTietHoaDon(ChiTietHoaDon instance);
    partial void UpdateChiTietHoaDon(ChiTietHoaDon instance);
    partial void DeleteChiTietHoaDon(ChiTietHoaDon instance);
    partial void InsertDanhMuc(DanhMuc instance);
    partial void UpdateDanhMuc(DanhMuc instance);
    partial void DeleteDanhMuc(DanhMuc instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertKho(Kho instance);
    partial void UpdateKho(Kho instance);
    partial void DeleteKho(Kho instance);
    partial void InsertKhuyenmai(Khuyenmai instance);
    partial void UpdateKhuyenmai(Khuyenmai instance);
    partial void DeleteKhuyenmai(Khuyenmai instance);
    partial void InsertLoaikm(Loaikm instance);
    partial void UpdateLoaikm(Loaikm instance);
    partial void DeleteLoaikm(Loaikm instance);
    partial void InsertMon(Mon instance);
    partial void UpdateMon(Mon instance);
    partial void DeleteMon(Mon instance);
    partial void InsertMonkhuyenmai(Monkhuyenmai instance);
    partial void UpdateMonkhuyenmai(Monkhuyenmai instance);
    partial void DeleteMonkhuyenmai(Monkhuyenmai instance);
    partial void InsertNhacungcap(Nhacungcap instance);
    partial void UpdateNhacungcap(Nhacungcap instance);
    partial void DeleteNhacungcap(Nhacungcap instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertPhieunhap(Phieunhap instance);
    partial void UpdatePhieunhap(Phieunhap instance);
    partial void DeletePhieunhap(Phieunhap instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    #endregion
		
		public DataContextDataContext() : 
				base(global::QuanLyCafe.Properties.Settings.Default.QuanLyCafeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BanCafe> BanCafes
		{
			get
			{
				return this.GetTable<BanCafe>();
			}
		}
		
		public System.Data.Linq.Table<CaLamViec> CaLamViecs
		{
			get
			{
				return this.GetTable<CaLamViec>();
			}
		}
		
		public System.Data.Linq.Table<Chitietclv> Chitietclvs
		{
			get
			{
				return this.GetTable<Chitietclv>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this.GetTable<ChiTietHoaDon>();
			}
		}
		
		public System.Data.Linq.Table<Chitietpn> Chitietpns
		{
			get
			{
				return this.GetTable<Chitietpn>();
			}
		}
		
		public System.Data.Linq.Table<DanhMuc> DanhMucs
		{
			get
			{
				return this.GetTable<DanhMuc>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<Kho> Khos
		{
			get
			{
				return this.GetTable<Kho>();
			}
		}
		
		public System.Data.Linq.Table<Khuyenmai> Khuyenmais
		{
			get
			{
				return this.GetTable<Khuyenmai>();
			}
		}
		
		public System.Data.Linq.Table<Loaikm> Loaikms
		{
			get
			{
				return this.GetTable<Loaikm>();
			}
		}
		
		public System.Data.Linq.Table<Mon> Mons
		{
			get
			{
				return this.GetTable<Mon>();
			}
		}
		
		public System.Data.Linq.Table<Monkhuyenmai> Monkhuyenmais
		{
			get
			{
				return this.GetTable<Monkhuyenmai>();
			}
		}
		
		public System.Data.Linq.Table<Nhacungcap> Nhacungcaps
		{
			get
			{
				return this.GetTable<Nhacungcap>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<Phieunhap> Phieunhaps
		{
			get
			{
				return this.GetTable<Phieunhap>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BanCafe")]
	public partial class BanCafe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSoBan;
		
		private string _TenBan;
		
		private string _Trangthai;
		
		private EntitySet<HoaDon> _HoaDons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSoBanChanging(int value);
    partial void OnMaSoBanChanged();
    partial void OnTenBanChanging(string value);
    partial void OnTenBanChanged();
    partial void OnTrangthaiChanging(string value);
    partial void OnTrangthaiChanged();
    #endregion
		
		public BanCafe()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoBan", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSoBan
		{
			get
			{
				return this._MaSoBan;
			}
			set
			{
				if ((this._MaSoBan != value))
				{
					this.OnMaSoBanChanging(value);
					this.SendPropertyChanging();
					this._MaSoBan = value;
					this.SendPropertyChanged("MaSoBan");
					this.OnMaSoBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBan", DbType="NVarChar(50)")]
		public string TenBan
		{
			get
			{
				return this._TenBan;
			}
			set
			{
				if ((this._TenBan != value))
				{
					this.OnTenBanChanging(value);
					this.SendPropertyChanging();
					this._TenBan = value;
					this.SendPropertyChanged("TenBan");
					this.OnTenBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trangthai", DbType="NChar(10)")]
		public string Trangthai
		{
			get
			{
				return this._Trangthai;
			}
			set
			{
				if ((this._Trangthai != value))
				{
					this.OnTrangthaiChanging(value);
					this.SendPropertyChanging();
					this._Trangthai = value;
					this.SendPropertyChanged("Trangthai");
					this.OnTrangthaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanCafe_HoaDon", Storage="_HoaDons", ThisKey="MaSoBan", OtherKey="MaSoBan")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.BanCafe = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.BanCafe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CaLamViec")]
	public partial class CaLamViec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Data.Linq.Binary _Maclv;
		
		private string _Tenclv;
		
		private System.Nullable<System.TimeSpan> _Giobd;
		
		private System.Nullable<System.TimeSpan> _Giokt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaclvChanging(System.Data.Linq.Binary value);
    partial void OnMaclvChanged();
    partial void OnTenclvChanging(string value);
    partial void OnTenclvChanged();
    partial void OnGiobdChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGiobdChanged();
    partial void OnGioktChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioktChanged();
    #endregion
		
		public CaLamViec()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maclv", DbType="VarBinary(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Maclv
		{
			get
			{
				return this._Maclv;
			}
			set
			{
				if ((this._Maclv != value))
				{
					this.OnMaclvChanging(value);
					this.SendPropertyChanging();
					this._Maclv = value;
					this.SendPropertyChanged("Maclv");
					this.OnMaclvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenclv", DbType="NVarChar(50)")]
		public string Tenclv
		{
			get
			{
				return this._Tenclv;
			}
			set
			{
				if ((this._Tenclv != value))
				{
					this.OnTenclvChanging(value);
					this.SendPropertyChanging();
					this._Tenclv = value;
					this.SendPropertyChanged("Tenclv");
					this.OnTenclvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giobd", DbType="Time")]
		public System.Nullable<System.TimeSpan> Giobd
		{
			get
			{
				return this._Giobd;
			}
			set
			{
				if ((this._Giobd != value))
				{
					this.OnGiobdChanging(value);
					this.SendPropertyChanging();
					this._Giobd = value;
					this.SendPropertyChanged("Giobd");
					this.OnGiobdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giokt", DbType="Time")]
		public System.Nullable<System.TimeSpan> Giokt
		{
			get
			{
				return this._Giokt;
			}
			set
			{
				if ((this._Giokt != value))
				{
					this.OnGioktChanging(value);
					this.SendPropertyChanging();
					this._Giokt = value;
					this.SendPropertyChanged("Giokt");
					this.OnGioktChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chitietclv")]
	public partial class Chitietclv
	{
		
		private System.Data.Linq.Binary _Mactclv;
		
		private System.Nullable<int> _manv;
		
		private string _tongcalam;
		
		private System.Nullable<decimal> _thanhtien;
		
		public Chitietclv()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mactclv", DbType="VarBinary(50)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Mactclv
		{
			get
			{
				return this._Mactclv;
			}
			set
			{
				if ((this._Mactclv != value))
				{
					this._Mactclv = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manv", DbType="Int")]
		public System.Nullable<int> manv
		{
			get
			{
				return this._manv;
			}
			set
			{
				if ((this._manv != value))
				{
					this._manv = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongcalam", DbType="NChar(10)")]
		public string tongcalam
		{
			get
			{
				return this._tongcalam;
			}
			set
			{
				if ((this._tongcalam != value))
				{
					this._tongcalam = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhtien", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> thanhtien
		{
			get
			{
				return this._thanhtien;
			}
			set
			{
				if ((this._thanhtien != value))
				{
					this._thanhtien = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDon")]
	public partial class ChiTietHoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChiTietHD;
		
		private System.Nullable<int> _MaHD;
		
		private System.Nullable<int> _MaMon;
		
		private System.Nullable<int> _SoLuong;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<Mon> _Mon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietHDChanging(int value);
    partial void OnMaChiTietHDChanged();
    partial void OnMaHDChanging(System.Nullable<int> value);
    partial void OnMaHDChanged();
    partial void OnMaMonChanging(System.Nullable<int> value);
    partial void OnMaMonChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public ChiTietHoaDon()
		{
			this._HoaDon = default(EntityRef<HoaDon>);
			this._Mon = default(EntityRef<Mon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietHD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChiTietHD
		{
			get
			{
				return this._MaChiTietHD;
			}
			set
			{
				if ((this._MaChiTietHD != value))
				{
					this.OnMaChiTietHDChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietHD = value;
					this.SendPropertyChanged("MaChiTietHD");
					this.OnMaChiTietHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Int")]
		public System.Nullable<int> MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="Int")]
		public System.Nullable<int> MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._Mon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_HoaDon", ThisKey="MaHD", OtherKey="MaHD", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.ChiTietHoaDons.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDons.Add(this);
						this._MaHD = value.MaHD;
					}
					else
					{
						this._MaHD = default(Nullable<int>);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_ChiTietHoaDon", Storage="_Mon", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public Mon Mon
		{
			get
			{
				return this._Mon.Entity;
			}
			set
			{
				Mon previousValue = this._Mon.Entity;
				if (((previousValue != value) 
							|| (this._Mon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mon.Entity = null;
						previousValue.ChiTietHoaDons.Remove(this);
					}
					this._Mon.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDons.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(Nullable<int>);
					}
					this.SendPropertyChanged("Mon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chitietpn")]
	public partial class Chitietpn
	{
		
		private System.Nullable<int> _maphieunhap;
		
		private System.Nullable<int> _sl;
		
		private System.Nullable<decimal> _thanhtien;
		
		private System.Nullable<int> _mavt;
		
		public Chitietpn()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maphieunhap", DbType="Int")]
		public System.Nullable<int> maphieunhap
		{
			get
			{
				return this._maphieunhap;
			}
			set
			{
				if ((this._maphieunhap != value))
				{
					this._maphieunhap = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sl", DbType="Int")]
		public System.Nullable<int> sl
		{
			get
			{
				return this._sl;
			}
			set
			{
				if ((this._sl != value))
				{
					this._sl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thanhtien", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> thanhtien
		{
			get
			{
				return this._thanhtien;
			}
			set
			{
				if ((this._thanhtien != value))
				{
					this._thanhtien = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mavt", DbType="Int")]
		public System.Nullable<int> mavt
		{
			get
			{
				return this._mavt;
			}
			set
			{
				if ((this._mavt != value))
				{
					this._mavt = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMuc")]
	public partial class DanhMuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDanhMuc;
		
		private string _Ten;
		
		private EntitySet<Mon> _Mons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDanhMucChanging(int value);
    partial void OnMaDanhMucChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    #endregion
		
		public DanhMuc()
		{
			this._Mons = new EntitySet<Mon>(new Action<Mon>(this.attach_Mons), new Action<Mon>(this.detach_Mons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhMuc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDanhMuc
		{
			get
			{
				return this._MaDanhMuc;
			}
			set
			{
				if ((this._MaDanhMuc != value))
				{
					this.OnMaDanhMucChanging(value);
					this.SendPropertyChanging();
					this._MaDanhMuc = value;
					this.SendPropertyChanged("MaDanhMuc");
					this.OnMaDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NChar(10)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_Mon", Storage="_Mons", ThisKey="MaDanhMuc", OtherKey="MaDanhMuc")]
		public EntitySet<Mon> Mons
		{
			get
			{
				return this._Mons;
			}
			set
			{
				this._Mons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mons(Mon entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = this;
		}
		
		private void detach_Mons(Mon entity)
		{
			this.SendPropertyChanging();
			entity.DanhMuc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHD;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private System.Nullable<int> _MaNhanVien;
		
		private System.Nullable<int> _MaSoBan;
		
		private System.Nullable<double> _TongTien;
		
		private System.Nullable<double> _GiamGia;
		
		private System.Nullable<int> _status;
		
		private EntitySet<ChiTietHoaDon> _ChiTietHoaDons;
		
		private EntityRef<BanCafe> _BanCafe;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHDChanging(int value);
    partial void OnMaHDChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    partial void OnMaNhanVienChanging(System.Nullable<int> value);
    partial void OnMaNhanVienChanged();
    partial void OnMaSoBanChanging(System.Nullable<int> value);
    partial void OnMaSoBanChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    partial void OnGiamGiaChanging(System.Nullable<double> value);
    partial void OnGiamGiaChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public HoaDon()
		{
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDon>(new Action<ChiTietHoaDon>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDon>(this.detach_ChiTietHoaDons));
			this._BanCafe = default(EntityRef<BanCafe>);
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="DateTime")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", DbType="Int")]
		public System.Nullable<int> MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSoBan", DbType="Int")]
		public System.Nullable<int> MaSoBan
		{
			get
			{
				return this._MaSoBan;
			}
			set
			{
				if ((this._MaSoBan != value))
				{
					if (this._BanCafe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSoBanChanging(value);
					this.SendPropertyChanging();
					this._MaSoBan = value;
					this.SendPropertyChanged("MaSoBan");
					this.OnMaSoBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiamGia", DbType="Float")]
		public System.Nullable<double> GiamGia
		{
			get
			{
				return this._GiamGia;
			}
			set
			{
				if ((this._GiamGia != value))
				{
					this.OnGiamGiaChanging(value);
					this.SendPropertyChanging();
					this._GiamGia = value;
					this.SendPropertyChanged("GiamGia");
					this.OnGiamGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="MaHD", OtherKey="MaHD")]
		public EntitySet<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BanCafe_HoaDon", Storage="_BanCafe", ThisKey="MaSoBan", OtherKey="MaSoBan", IsForeignKey=true)]
		public BanCafe BanCafe
		{
			get
			{
				return this._BanCafe.Entity;
			}
			set
			{
				BanCafe previousValue = this._BanCafe.Entity;
				if (((previousValue != value) 
							|| (this._BanCafe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BanCafe.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._BanCafe.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaSoBan = value.MaSoBan;
					}
					else
					{
						this._MaSoBan = default(Nullable<int>);
					}
					this.SendPropertyChanged("BanCafe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_NhanVien", ThisKey="MaNhanVien", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaNhanVien = value.MaNhanVien;
					}
					else
					{
						this._MaNhanVien = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kho")]
	public partial class Kho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mavt;
		
		private string _tenvt;
		
		private string _sl;
		
		private string _donvi;
		
		private EntitySet<Mon> _Mons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmavtChanging(int value);
    partial void OnmavtChanged();
    partial void OntenvtChanging(string value);
    partial void OntenvtChanged();
    partial void OnslChanging(string value);
    partial void OnslChanged();
    partial void OndonviChanging(string value);
    partial void OndonviChanged();
    #endregion
		
		public Kho()
		{
			this._Mons = new EntitySet<Mon>(new Action<Mon>(this.attach_Mons), new Action<Mon>(this.detach_Mons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mavt", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int mavt
		{
			get
			{
				return this._mavt;
			}
			set
			{
				if ((this._mavt != value))
				{
					this.OnmavtChanging(value);
					this.SendPropertyChanging();
					this._mavt = value;
					this.SendPropertyChanged("mavt");
					this.OnmavtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenvt", DbType="NChar(10)")]
		public string tenvt
		{
			get
			{
				return this._tenvt;
			}
			set
			{
				if ((this._tenvt != value))
				{
					this.OntenvtChanging(value);
					this.SendPropertyChanging();
					this._tenvt = value;
					this.SendPropertyChanged("tenvt");
					this.OntenvtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sl", DbType="NChar(10)")]
		public string sl
		{
			get
			{
				return this._sl;
			}
			set
			{
				if ((this._sl != value))
				{
					this.OnslChanging(value);
					this.SendPropertyChanging();
					this._sl = value;
					this.SendPropertyChanged("sl");
					this.OnslChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donvi", DbType="NChar(10)")]
		public string donvi
		{
			get
			{
				return this._donvi;
			}
			set
			{
				if ((this._donvi != value))
				{
					this.OndonviChanging(value);
					this.SendPropertyChanging();
					this._donvi = value;
					this.SendPropertyChanged("donvi");
					this.OndonviChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_Mon", Storage="_Mons", ThisKey="mavt", OtherKey="mavt")]
		public EntitySet<Mon> Mons
		{
			get
			{
				return this._Mons;
			}
			set
			{
				this._Mons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mons(Mon entity)
		{
			this.SendPropertyChanging();
			entity.Kho = this;
		}
		
		private void detach_Mons(Mon entity)
		{
			this.SendPropertyChanging();
			entity.Kho = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khuyenmai")]
	public partial class Khuyenmai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _makm;
		
		private string _tenkm;
		
		private System.Nullable<System.DateTime> _tgbatdau;
		
		private System.Nullable<System.DateTime> _tgketthuc;
		
		private System.Nullable<int> _maloaikm;
		
		private System.Nullable<double> _GiaKhuyenMai;
		
		private EntitySet<Monkhuyenmai> _Monkhuyenmais;
		
		private EntityRef<Loaikm> _Loaikm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmakmChanging(int value);
    partial void OnmakmChanged();
    partial void OntenkmChanging(string value);
    partial void OntenkmChanged();
    partial void OntgbatdauChanging(System.Nullable<System.DateTime> value);
    partial void OntgbatdauChanged();
    partial void OntgketthucChanging(System.Nullable<System.DateTime> value);
    partial void OntgketthucChanged();
    partial void OnmaloaikmChanging(System.Nullable<int> value);
    partial void OnmaloaikmChanged();
    partial void OnGiaKhuyenMaiChanging(System.Nullable<double> value);
    partial void OnGiaKhuyenMaiChanged();
    #endregion
		
		public Khuyenmai()
		{
			this._Monkhuyenmais = new EntitySet<Monkhuyenmai>(new Action<Monkhuyenmai>(this.attach_Monkhuyenmais), new Action<Monkhuyenmai>(this.detach_Monkhuyenmais));
			this._Loaikm = default(EntityRef<Loaikm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_makm", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int makm
		{
			get
			{
				return this._makm;
			}
			set
			{
				if ((this._makm != value))
				{
					this.OnmakmChanging(value);
					this.SendPropertyChanging();
					this._makm = value;
					this.SendPropertyChanged("makm");
					this.OnmakmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenkm", DbType="NVarChar(200)")]
		public string tenkm
		{
			get
			{
				return this._tenkm;
			}
			set
			{
				if ((this._tenkm != value))
				{
					this.OntenkmChanging(value);
					this.SendPropertyChanging();
					this._tenkm = value;
					this.SendPropertyChanged("tenkm");
					this.OntenkmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tgbatdau", DbType="DateTime")]
		public System.Nullable<System.DateTime> tgbatdau
		{
			get
			{
				return this._tgbatdau;
			}
			set
			{
				if ((this._tgbatdau != value))
				{
					this.OntgbatdauChanging(value);
					this.SendPropertyChanging();
					this._tgbatdau = value;
					this.SendPropertyChanged("tgbatdau");
					this.OntgbatdauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tgketthuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> tgketthuc
		{
			get
			{
				return this._tgketthuc;
			}
			set
			{
				if ((this._tgketthuc != value))
				{
					this.OntgketthucChanging(value);
					this.SendPropertyChanging();
					this._tgketthuc = value;
					this.SendPropertyChanged("tgketthuc");
					this.OntgketthucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maloaikm", DbType="Int")]
		public System.Nullable<int> maloaikm
		{
			get
			{
				return this._maloaikm;
			}
			set
			{
				if ((this._maloaikm != value))
				{
					if (this._Loaikm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaloaikmChanging(value);
					this.SendPropertyChanging();
					this._maloaikm = value;
					this.SendPropertyChanged("maloaikm");
					this.OnmaloaikmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaKhuyenMai", DbType="Float")]
		public System.Nullable<double> GiaKhuyenMai
		{
			get
			{
				return this._GiaKhuyenMai;
			}
			set
			{
				if ((this._GiaKhuyenMai != value))
				{
					this.OnGiaKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._GiaKhuyenMai = value;
					this.SendPropertyChanged("GiaKhuyenMai");
					this.OnGiaKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khuyenmai_Monkhuyenmai", Storage="_Monkhuyenmais", ThisKey="makm", OtherKey="MaKm")]
		public EntitySet<Monkhuyenmai> Monkhuyenmais
		{
			get
			{
				return this._Monkhuyenmais;
			}
			set
			{
				this._Monkhuyenmais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loaikm_Khuyenmai", Storage="_Loaikm", ThisKey="maloaikm", OtherKey="maloaikm", IsForeignKey=true)]
		public Loaikm Loaikm
		{
			get
			{
				return this._Loaikm.Entity;
			}
			set
			{
				Loaikm previousValue = this._Loaikm.Entity;
				if (((previousValue != value) 
							|| (this._Loaikm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loaikm.Entity = null;
						previousValue.Khuyenmais.Remove(this);
					}
					this._Loaikm.Entity = value;
					if ((value != null))
					{
						value.Khuyenmais.Add(this);
						this._maloaikm = value.maloaikm;
					}
					else
					{
						this._maloaikm = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loaikm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Monkhuyenmais(Monkhuyenmai entity)
		{
			this.SendPropertyChanging();
			entity.Khuyenmai = this;
		}
		
		private void detach_Monkhuyenmais(Monkhuyenmai entity)
		{
			this.SendPropertyChanging();
			entity.Khuyenmai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loaikm")]
	public partial class Loaikm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maloaikm;
		
		private string _tenloai;
		
		private EntitySet<Khuyenmai> _Khuyenmais;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaloaikmChanging(int value);
    partial void OnmaloaikmChanged();
    partial void OntenloaiChanging(string value);
    partial void OntenloaiChanged();
    #endregion
		
		public Loaikm()
		{
			this._Khuyenmais = new EntitySet<Khuyenmai>(new Action<Khuyenmai>(this.attach_Khuyenmais), new Action<Khuyenmai>(this.detach_Khuyenmais));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maloaikm", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maloaikm
		{
			get
			{
				return this._maloaikm;
			}
			set
			{
				if ((this._maloaikm != value))
				{
					this.OnmaloaikmChanging(value);
					this.SendPropertyChanging();
					this._maloaikm = value;
					this.SendPropertyChanged("maloaikm");
					this.OnmaloaikmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenloai", DbType="NVarChar(50)")]
		public string tenloai
		{
			get
			{
				return this._tenloai;
			}
			set
			{
				if ((this._tenloai != value))
				{
					this.OntenloaiChanging(value);
					this.SendPropertyChanging();
					this._tenloai = value;
					this.SendPropertyChanged("tenloai");
					this.OntenloaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loaikm_Khuyenmai", Storage="_Khuyenmais", ThisKey="maloaikm", OtherKey="maloaikm")]
		public EntitySet<Khuyenmai> Khuyenmais
		{
			get
			{
				return this._Khuyenmais;
			}
			set
			{
				this._Khuyenmais.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Khuyenmais(Khuyenmai entity)
		{
			this.SendPropertyChanging();
			entity.Loaikm = this;
		}
		
		private void detach_Khuyenmais(Khuyenmai entity)
		{
			this.SendPropertyChanging();
			entity.Loaikm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mon")]
	public partial class Mon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMon;
		
		private string _Ten;
		
		private System.Nullable<int> _MaDanhMuc;
		
		private System.Nullable<double> _GiaTien;
		
		private string _Hinh;
		
		private System.Nullable<int> _mavt;
		
		private System.Nullable<int> _mancc;
		
		private EntitySet<ChiTietHoaDon> _ChiTietHoaDons;
		
		private EntitySet<Monkhuyenmai> _Monkhuyenmais;
		
		private EntityRef<DanhMuc> _DanhMuc;
		
		private EntityRef<Kho> _Kho;
		
		private EntityRef<Nhacungcap> _Nhacungcap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonChanging(int value);
    partial void OnMaMonChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnMaDanhMucChanging(System.Nullable<int> value);
    partial void OnMaDanhMucChanged();
    partial void OnGiaTienChanging(System.Nullable<double> value);
    partial void OnGiaTienChanged();
    partial void OnHinhChanging(string value);
    partial void OnHinhChanged();
    partial void OnmavtChanging(System.Nullable<int> value);
    partial void OnmavtChanged();
    partial void OnmanccChanging(System.Nullable<int> value);
    partial void OnmanccChanged();
    #endregion
		
		public Mon()
		{
			this._ChiTietHoaDons = new EntitySet<ChiTietHoaDon>(new Action<ChiTietHoaDon>(this.attach_ChiTietHoaDons), new Action<ChiTietHoaDon>(this.detach_ChiTietHoaDons));
			this._Monkhuyenmais = new EntitySet<Monkhuyenmai>(new Action<Monkhuyenmai>(this.attach_Monkhuyenmais), new Action<Monkhuyenmai>(this.detach_Monkhuyenmais));
			this._DanhMuc = default(EntityRef<DanhMuc>);
			this._Kho = default(EntityRef<Kho>);
			this._Nhacungcap = default(EntityRef<Nhacungcap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDanhMuc", DbType="Int")]
		public System.Nullable<int> MaDanhMuc
		{
			get
			{
				return this._MaDanhMuc;
			}
			set
			{
				if ((this._MaDanhMuc != value))
				{
					if (this._DanhMuc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDanhMucChanging(value);
					this.SendPropertyChanging();
					this._MaDanhMuc = value;
					this.SendPropertyChanged("MaDanhMuc");
					this.OnMaDanhMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien", DbType="Float")]
		public System.Nullable<double> GiaTien
		{
			get
			{
				return this._GiaTien;
			}
			set
			{
				if ((this._GiaTien != value))
				{
					this.OnGiaTienChanging(value);
					this.SendPropertyChanging();
					this._GiaTien = value;
					this.SendPropertyChanged("GiaTien");
					this.OnGiaTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="VarChar(200)")]
		public string Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mavt", DbType="Int")]
		public System.Nullable<int> mavt
		{
			get
			{
				return this._mavt;
			}
			set
			{
				if ((this._mavt != value))
				{
					if (this._Kho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmavtChanging(value);
					this.SendPropertyChanging();
					this._mavt = value;
					this.SendPropertyChanged("mavt");
					this.OnmavtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mancc", DbType="Int")]
		public System.Nullable<int> mancc
		{
			get
			{
				return this._mancc;
			}
			set
			{
				if ((this._mancc != value))
				{
					if (this._Nhacungcap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmanccChanging(value);
					this.SendPropertyChanging();
					this._mancc = value;
					this.SendPropertyChanged("mancc");
					this.OnmanccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_ChiTietHoaDon", Storage="_ChiTietHoaDons", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<ChiTietHoaDon> ChiTietHoaDons
		{
			get
			{
				return this._ChiTietHoaDons;
			}
			set
			{
				this._ChiTietHoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_Monkhuyenmai", Storage="_Monkhuyenmais", ThisKey="MaMon", OtherKey="MaMon")]
		public EntitySet<Monkhuyenmai> Monkhuyenmais
		{
			get
			{
				return this._Monkhuyenmais;
			}
			set
			{
				this._Monkhuyenmais.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMuc_Mon", Storage="_DanhMuc", ThisKey="MaDanhMuc", OtherKey="MaDanhMuc", IsForeignKey=true)]
		public DanhMuc DanhMuc
		{
			get
			{
				return this._DanhMuc.Entity;
			}
			set
			{
				DanhMuc previousValue = this._DanhMuc.Entity;
				if (((previousValue != value) 
							|| (this._DanhMuc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMuc.Entity = null;
						previousValue.Mons.Remove(this);
					}
					this._DanhMuc.Entity = value;
					if ((value != null))
					{
						value.Mons.Add(this);
						this._MaDanhMuc = value.MaDanhMuc;
					}
					else
					{
						this._MaDanhMuc = default(Nullable<int>);
					}
					this.SendPropertyChanged("DanhMuc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_Mon", Storage="_Kho", ThisKey="mavt", OtherKey="mavt", IsForeignKey=true)]
		public Kho Kho
		{
			get
			{
				return this._Kho.Entity;
			}
			set
			{
				Kho previousValue = this._Kho.Entity;
				if (((previousValue != value) 
							|| (this._Kho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kho.Entity = null;
						previousValue.Mons.Remove(this);
					}
					this._Kho.Entity = value;
					if ((value != null))
					{
						value.Mons.Add(this);
						this._mavt = value.mavt;
					}
					else
					{
						this._mavt = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kho");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhacungcap_Mon", Storage="_Nhacungcap", ThisKey="mancc", OtherKey="mancc", IsForeignKey=true)]
		public Nhacungcap Nhacungcap
		{
			get
			{
				return this._Nhacungcap.Entity;
			}
			set
			{
				Nhacungcap previousValue = this._Nhacungcap.Entity;
				if (((previousValue != value) 
							|| (this._Nhacungcap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nhacungcap.Entity = null;
						previousValue.Mons.Remove(this);
					}
					this._Nhacungcap.Entity = value;
					if ((value != null))
					{
						value.Mons.Add(this);
						this._mancc = value.mancc;
					}
					else
					{
						this._mancc = default(Nullable<int>);
					}
					this.SendPropertyChanged("Nhacungcap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Mon = this;
		}
		
		private void detach_ChiTietHoaDons(ChiTietHoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Mon = null;
		}
		
		private void attach_Monkhuyenmais(Monkhuyenmai entity)
		{
			this.SendPropertyChanging();
			entity.Mon = this;
		}
		
		private void detach_Monkhuyenmais(Monkhuyenmai entity)
		{
			this.SendPropertyChanging();
			entity.Mon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Monkhuyenmai")]
	public partial class Monkhuyenmai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMon;
		
		private int _MaKm;
		
		private EntityRef<Mon> _Mon;
		
		private EntityRef<Khuyenmai> _Khuyenmai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMonChanging(int value);
    partial void OnMaMonChanged();
    partial void OnMaKmChanging(int value);
    partial void OnMaKmChanged();
    #endregion
		
		public Monkhuyenmai()
		{
			this._Mon = default(EntityRef<Mon>);
			this._Khuyenmai = default(EntityRef<Khuyenmai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMon", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaMon
		{
			get
			{
				return this._MaMon;
			}
			set
			{
				if ((this._MaMon != value))
				{
					if (this._Mon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMonChanging(value);
					this.SendPropertyChanging();
					this._MaMon = value;
					this.SendPropertyChanged("MaMon");
					this.OnMaMonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKm", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKm
		{
			get
			{
				return this._MaKm;
			}
			set
			{
				if ((this._MaKm != value))
				{
					if (this._Khuyenmai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKmChanging(value);
					this.SendPropertyChanging();
					this._MaKm = value;
					this.SendPropertyChanged("MaKm");
					this.OnMaKmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mon_Monkhuyenmai", Storage="_Mon", ThisKey="MaMon", OtherKey="MaMon", IsForeignKey=true)]
		public Mon Mon
		{
			get
			{
				return this._Mon.Entity;
			}
			set
			{
				Mon previousValue = this._Mon.Entity;
				if (((previousValue != value) 
							|| (this._Mon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mon.Entity = null;
						previousValue.Monkhuyenmais.Remove(this);
					}
					this._Mon.Entity = value;
					if ((value != null))
					{
						value.Monkhuyenmais.Add(this);
						this._MaMon = value.MaMon;
					}
					else
					{
						this._MaMon = default(int);
					}
					this.SendPropertyChanged("Mon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khuyenmai_Monkhuyenmai", Storage="_Khuyenmai", ThisKey="MaKm", OtherKey="makm", IsForeignKey=true)]
		public Khuyenmai Khuyenmai
		{
			get
			{
				return this._Khuyenmai.Entity;
			}
			set
			{
				Khuyenmai previousValue = this._Khuyenmai.Entity;
				if (((previousValue != value) 
							|| (this._Khuyenmai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khuyenmai.Entity = null;
						previousValue.Monkhuyenmais.Remove(this);
					}
					this._Khuyenmai.Entity = value;
					if ((value != null))
					{
						value.Monkhuyenmais.Add(this);
						this._MaKm = value.makm;
					}
					else
					{
						this._MaKm = default(int);
					}
					this.SendPropertyChanged("Khuyenmai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nhacungcap")]
	public partial class Nhacungcap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mancc;
		
		private string _tenncc;
		
		private string _dischi;
		
		private string _sdt;
		
		private EntitySet<Mon> _Mons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmanccChanging(int value);
    partial void OnmanccChanged();
    partial void OntennccChanging(string value);
    partial void OntennccChanged();
    partial void OndischiChanging(string value);
    partial void OndischiChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    #endregion
		
		public Nhacungcap()
		{
			this._Mons = new EntitySet<Mon>(new Action<Mon>(this.attach_Mons), new Action<Mon>(this.detach_Mons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mancc", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int mancc
		{
			get
			{
				return this._mancc;
			}
			set
			{
				if ((this._mancc != value))
				{
					this.OnmanccChanging(value);
					this.SendPropertyChanging();
					this._mancc = value;
					this.SendPropertyChanged("mancc");
					this.OnmanccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenncc", DbType="NVarChar(10)")]
		public string tenncc
		{
			get
			{
				return this._tenncc;
			}
			set
			{
				if ((this._tenncc != value))
				{
					this.OntennccChanging(value);
					this.SendPropertyChanging();
					this._tenncc = value;
					this.SendPropertyChanged("tenncc");
					this.OntennccChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dischi", DbType="NVarChar(MAX)")]
		public string dischi
		{
			get
			{
				return this._dischi;
			}
			set
			{
				if ((this._dischi != value))
				{
					this.OndischiChanging(value);
					this.SendPropertyChanging();
					this._dischi = value;
					this.SendPropertyChanged("dischi");
					this.OndischiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="Char(11)")]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhacungcap_Mon", Storage="_Mons", ThisKey="mancc", OtherKey="mancc")]
		public EntitySet<Mon> Mons
		{
			get
			{
				return this._Mons;
			}
			set
			{
				this._Mons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mons(Mon entity)
		{
			this.SendPropertyChanging();
			entity.Nhacungcap = this;
		}
		
		private void detach_Mons(Mon entity)
		{
			this.SendPropertyChanging();
			entity.Nhacungcap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNhanVien;
		
		private string _Ten;
		
		private string _MatKhau;
		
		private string _TenDangNhap;
		
		private System.Nullable<bool> _Gioitinh;
		
		private string _sdt;
		
		private System.Nullable<int> _Role;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntitySet<Phieunhap> _Phieunhaps;
		
		private EntityRef<Role> _Role1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhanVienChanging(int value);
    partial void OnMaNhanVienChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnGioitinhChanging(System.Nullable<bool> value);
    partial void OnGioitinhChanged();
    partial void OnsdtChanging(string value);
    partial void OnsdtChanged();
    partial void OnRoleChanging(System.Nullable<int> value);
    partial void OnRoleChanged();
    #endregion
		
		public NhanVien()
		{
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._Phieunhaps = new EntitySet<Phieunhap>(new Action<Phieunhap>(this.attach_Phieunhaps), new Action<Phieunhap>(this.detach_Phieunhaps));
			this._Role1 = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(100)")]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(500)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(100)")]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gioitinh", DbType="Bit")]
		public System.Nullable<bool> Gioitinh
		{
			get
			{
				return this._Gioitinh;
			}
			set
			{
				if ((this._Gioitinh != value))
				{
					this.OnGioitinhChanging(value);
					this.SendPropertyChanging();
					this._Gioitinh = value;
					this.SendPropertyChanged("Gioitinh");
					this.OnGioitinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sdt", DbType="NChar(11)")]
		public string sdt
		{
			get
			{
				return this._sdt;
			}
			set
			{
				if ((this._sdt != value))
				{
					this.OnsdtChanging(value);
					this.SendPropertyChanging();
					this._sdt = value;
					this.SendPropertyChanged("sdt");
					this.OnsdtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Int")]
		public System.Nullable<int> Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					if (this._Role1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_HoaDon", Storage="_HoaDons", ThisKey="MaNhanVien", OtherKey="MaNhanVien")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_Phieunhap", Storage="_Phieunhaps", ThisKey="MaNhanVien", OtherKey="MaNhanVien")]
		public EntitySet<Phieunhap> Phieunhaps
		{
			get
			{
				return this._Phieunhaps;
			}
			set
			{
				this._Phieunhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_NhanVien", Storage="_Role1", ThisKey="Role", OtherKey="Marole", IsForeignKey=true)]
		public Role Role1
		{
			get
			{
				return this._Role1.Entity;
			}
			set
			{
				Role previousValue = this._Role1.Entity;
				if (((previousValue != value) 
							|| (this._Role1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role1.Entity = null;
						previousValue.NhanViens.Remove(this);
					}
					this._Role1.Entity = value;
					if ((value != null))
					{
						value.NhanViens.Add(this);
						this._Role = value.Marole;
					}
					else
					{
						this._Role = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
		
		private void attach_Phieunhaps(Phieunhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_Phieunhaps(Phieunhap entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phieunhap")]
	public partial class Phieunhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _maphieunhap;
		
		private int _MaNhanVien;
		
		private System.Nullable<System.DateTime> _ngaynhap;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaphieunhapChanging(int value);
    partial void OnmaphieunhapChanged();
    partial void OnMaNhanVienChanging(int value);
    partial void OnMaNhanVienChanged();
    partial void OnngaynhapChanging(System.Nullable<System.DateTime> value);
    partial void OnngaynhapChanged();
    #endregion
		
		public Phieunhap()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maphieunhap", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int maphieunhap
		{
			get
			{
				return this._maphieunhap;
			}
			set
			{
				if ((this._maphieunhap != value))
				{
					this.OnmaphieunhapChanging(value);
					this.SendPropertyChanging();
					this._maphieunhap = value;
					this.SendPropertyChanged("maphieunhap");
					this.OnmaphieunhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", DbType="Int NOT NULL")]
		public int MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaynhap", DbType="DateTime")]
		public System.Nullable<System.DateTime> ngaynhap
		{
			get
			{
				return this._ngaynhap;
			}
			set
			{
				if ((this._ngaynhap != value))
				{
					this.OnngaynhapChanging(value);
					this.SendPropertyChanging();
					this._ngaynhap = value;
					this.SendPropertyChanged("ngaynhap");
					this.OnngaynhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_Phieunhap", Storage="_NhanVien", ThisKey="MaNhanVien", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.Phieunhaps.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.Phieunhaps.Add(this);
						this._MaNhanVien = value.MaNhanVien;
					}
					else
					{
						this._MaNhanVien = default(int);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Marole;
		
		private string _TenRole;
		
		private EntitySet<NhanVien> _NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaroleChanging(int value);
    partial void OnMaroleChanged();
    partial void OnTenRoleChanging(string value);
    partial void OnTenRoleChanged();
    #endregion
		
		public Role()
		{
			this._NhanViens = new EntitySet<NhanVien>(new Action<NhanVien>(this.attach_NhanViens), new Action<NhanVien>(this.detach_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marole", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Marole
		{
			get
			{
				return this._Marole;
			}
			set
			{
				if ((this._Marole != value))
				{
					this.OnMaroleChanging(value);
					this.SendPropertyChanging();
					this._Marole = value;
					this.SendPropertyChanged("Marole");
					this.OnMaroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenRole", DbType="NVarChar(50)")]
		public string TenRole
		{
			get
			{
				return this._TenRole;
			}
			set
			{
				if ((this._TenRole != value))
				{
					this.OnTenRoleChanging(value);
					this.SendPropertyChanging();
					this._TenRole = value;
					this.SendPropertyChanged("TenRole");
					this.OnTenRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_NhanVien", Storage="_NhanViens", ThisKey="Marole", OtherKey="Role")]
		public EntitySet<NhanVien> NhanViens
		{
			get
			{
				return this._NhanViens;
			}
			set
			{
				this._NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Role1 = this;
		}
		
		private void detach_NhanViens(NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.Role1 = null;
		}
	}
}
#pragma warning restore 1591
